C:\Users\lshil\Documents\BEHOLDER\BEHOLDER-User>npm start

> beholderuser@1.0.0 start C:\Users\lshil\Documents\BEHOLDER\BEHOLDER-User
> node server.js

(node:21408) DeprecationWarning: current URL string parser is deprecated, and will be removed in a future version. To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.
server running on port 5001
Connected to MongoDB
{ _id: 5d5fb54c4cd6314ad02b99b8,
  username: 'Bert',
  password:
   '$2b$12$JAXlR8n4G4YVpfr7rKUjZ.q6.WLNC51Zi7P4ysSm7osJ78jaIgc.u',
  __v: 0 }
user found & authenticated
POST /loginUser 200 336.344 ms - 239
{ Error: connect ECONNREFUSED 127.0.0.1:8083
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 8083,
  config:
   { url: 'http://localhost:8083/userLogin',
     method: 'post',
     data: 'Bert',
     headers:
      { Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'axios/0.19.0',
        'Content-Length': 4 },
     transformRequest: [ [Function: transformRequest] ],
     transformResponse: [ [Function: transformResponse] ],
     timeout: 0,
     adapter: [Function: httpAdapter],
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     validateStatus: [Function: validateStatus] },
  request:
   Writable {
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _events:
      [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError] },
     _eventsCount: 2,
     _maxListeners: undefined,
     _options:
      { protocol: 'http:',
        maxRedirects: 21,
        maxBodyLength: 10485760,
        path: '/userLogin',
        method: 'POST',
        headers: [Object],
        agent: undefined,
        auth: undefined,
        hostname: 'localhost',
        port: '8083',
        nativeProtocols: [Object],
        pathname: '/userLogin' },
     _redirectCount: 0,
     _redirects: [],
     _requestBodyLength: 4,
     _requestBodyBuffers: [ [Object] ],
     _onNativeResponse: [Function],
     _currentRequest:
      ClientRequest {
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /userLogin HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/x-www-form-urlencoded\r\nUser-Agent: axios/0.19.0\r\nContent-Length: 4\r\nHost: localhost:8083\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/userLogin',
        _ended: false,
        res: null,
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        _redirectable: [Circular],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _currentUrl: 'http://localhost:8083/userLogin' },
  response: undefined,
  isAxiosError: true,
  toJSON: [Function] }
Terminate batch job (Y/N)?
^C
C:\Users\lshil\Documents\BEHOLDER\BEHOLDER-User>npm run coverage

> beholderuser@1.0.0 coverage C:\Users\lshil\Documents\BEHOLDER\BEHOLDER-User
> nyc npm run test


> beholderuser@1.0.0 test C:\Users\lshil\Documents\BEHOLDER\BEHOLDER-User
> node postmanTest.js

(node:15548) DeprecationWarning: current URL string parser is deprecated, and will be removed in a future version. To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.
server running on port 5001
newman

BAE

→ registerUser - new details
  POST http://localhost:5001/registerUser  postman4
\Connected to MongoDB
\user created
{ _id: 5d63d18ad6583f3cbcc5d94b,
  username: 'postman4',
  password:
   '$2b$12$R1D1bQlFywKpWhV79fsG8us1Tz4N.tyemmioN6ZyipDdXVeibfbGy',
  __v: 0 }
{ username: 'postman4' }
POST /registerUser 200 591.297 ms - 35
[200 OK, 279B, 662ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ registerUser - details already exist
  POST http://localhost:5001/registerUser  admin
username  taken
username  taken
POST /registerUser 403 11.031 ms - 15
[403 Forbidden, 258B, 20ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ registerUser - missing details
  POST http://localhost:5001/registerUser  Missing credentials
POST /registerUser 403 0.998 ms - 19
[403 Forbidden, 263B, 8ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ loginUser - correct details
  POST http://localhost:5001/loginUser  { _id: 5d5fb54c4cd6314ad02b99b8,
  username: 'Bert',
  password:
   '$2b$12$JAXlR8n4G4YVpfr7rKUjZ.q6.WLNC51Zi7P4ysSm7osJ78jaIgc.u',
  __v: 0 }
\user found & authenticated
POST /loginUser 200 268.083 ms - 239
[200 OK, 484B, 272ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ loginUser - missing details
  POST http://localhost:5001/loginUser  Missing credentials
POST /loginUser 403 4.364 ms - 19
[403 Forbidden, 263B, 12ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ loginUser - incorrect details
  POST http://localhost:5001/loginUser  Missing credentials
POST /loginUser 403 1.188 ms - 19
[403 Forbidden, 263B, 18ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getauditrequestlog/Bert
  GET http://localhost:5001/getauditrequestlog/Bert  GET /getauditrequestlog/Bert 401 0.737 ms - 13
[401 Unauthorized, 259B, 12ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getauditrequestlog/Bert - with token
  GET http://localhost:5001/getauditrequestlog/Bert ―{ Error: connect ECONNREFUSED 127.0.0.1:8083
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 8083,
  config:
   { url: 'http://localhost:8083/userLogin',
     method: 'post',
     data: 'Bert',
     headers:
      { Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'axios/0.19.0',
        'Content-Length': 4 },
     transformRequest: [ [Function: transformRequest] ],
     transformResponse: [ [Function: transformResponse] ],
     timeout: 0,
     adapter: [Function: httpAdapter],
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     validateStatus: [Function: validateStatus] },
  request:
   Writable {
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _events:
      [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError] },
     _eventsCount: 2,
     _maxListeners: undefined,
     _options:
      { protocol: 'http:',
        maxRedirects: 21,
        maxBodyLength: 10485760,
        path: '/userLogin',
        method: 'POST',
        headers: [Object],
        agent: undefined,
        auth: undefined,
        hostname: 'localhost',
        port: '8083',
        nativeProtocols: [Object],
        pathname: '/userLogin' },
     _redirectCount: 0,
     _redirects: [],
     _requestBodyLength: 4,
     _requestBodyBuffers: [ [Object] ],
     _onNativeResponse: [Function],
     _currentRequest:
      ClientRequest {
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /userLogin HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/x-www-form-urlencoded\r\nUser-Agent: axios/0.19.0\r\nContent-Length: 4\r\nHost: localhost:8083\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/userLogin',
        _ended: false,
        res: null,
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        _redirectable: [Circular],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _currentUrl: 'http://localhost:8083/userLogin' },
  response: undefined,
  isAxiosError: true,
  toJSON: [Function] }
/{ Error: connect ECONNREFUSED 127.0.0.1:8083
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 8083,
  config:
   { url: 'http://localhost:8083/userLogin',
     method: 'post',
     data: '',
     headers:
      { Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'axios/0.19.0' },
     transformRequest: [ [Function: transformRequest] ],
     transformResponse: [ [Function: transformResponse] ],
     timeout: 0,
     adapter: [Function: httpAdapter],
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     validateStatus: [Function: validateStatus] },
  request:
   Writable {
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _events:
      [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError] },
     _eventsCount: 2,
     _maxListeners: undefined,
     _options:
      { protocol: 'http:',
        maxRedirects: 21,
        maxBodyLength: 10485760,
        path: '/userLogin',
        method: 'POST',
        headers: [Object],
        agent: undefined,
        auth: undefined,
        hostname: 'localhost',
        port: '8083',
        nativeProtocols: [Object],
        pathname: '/userLogin' },
     _redirectCount: 0,
     _redirects: [],
     _requestBodyLength: 0,
     _requestBodyBuffers: [],
     _onNativeResponse: [Function],
     _currentRequest:
      ClientRequest {
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /userLogin HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/x-www-form-urlencoded\r\nUser-Agent: axios/0.19.0\r\nHost: localhost:8083\r\nConnection: close\r\nContent-Length: 0\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/userLogin',
        _ended: false,
        res: null,
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        _redirectable: [Circular],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _currentUrl: 'http://localhost:8083/userLogin' },
  response: undefined,
  isAxiosError: true,
  toJSON: [Function] }
{ Error: connect ECONNREFUSED 127.0.0.1:8083
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 8083,
  config:
   { url: 'http://localhost:8083/userLogin',
     method: 'post',
     data: 'Bert',
     headers:
      { Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'axios/0.19.0',
        'Content-Length': 4 },
     transformRequest: [ [Function: transformRequest] ],
     transformResponse: [ [Function: transformResponse] ],
     timeout: 0,
     adapter: [Function: httpAdapter],
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     validateStatus: [Function: validateStatus] },
  request:
   Writable {
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _events:
      [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError] },
     _eventsCount: 2,
     _maxListeners: undefined,
     _options:
      { protocol: 'http:',
        maxRedirects: 21,
        maxBodyLength: 10485760,
        path: '/userLogin',
        method: 'POST',
        headers: [Object],
        agent: undefined,
        auth: undefined,
        hostname: 'localhost',
        port: '8083',
        nativeProtocols: [Object],
        pathname: '/userLogin' },
     _redirectCount: 0,
     _redirects: [],
     _requestBodyLength: 4,
     _requestBodyBuffers: [ [Object] ],
     _onNativeResponse: [Function],
     _currentRequest:
      ClientRequest {
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST /userLogin HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/x-www-form-urlencoded\r\nUser-Agent: axios/0.19.0\r\nContent-Length: 4\r\nHost: localhost:8083\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/userLogin',
        _ended: false,
        res: null,
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        _redirectable: [Circular],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _currentUrl: 'http://localhost:8083/userLogin' },
  response: undefined,
  isAxiosError: true,
  toJSON: [Function] }
\GET /getauditrequestlog/Bert 501 1005.254 ms - 39
[501 Not Implemented, 289B, 1009ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getauditrequestlog/lucy - with berts token
  GET http://localhost:5001/getauditrequestlog/lucy  Username and jwt token do not match
GET /getauditrequestlog/lucy 403 3.149 ms - 35
[403 Forbidden, 279B, 9ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getsearchlog/Bert
  GET http://localhost:5001/getsearchlog/Bert  GET /getsearchlog/Bert 401 0.360 ms - 13
[401 Unauthorized, 259B, 6ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getsearchlog/Bert - with token
  GET http://localhost:5001/getsearchlog/Bert \GET /getsearchlog/Bert 501 1003.885 ms - 39
[501 Not Implemented, 289B, 1011ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getsearchlog/lucy - with berts token
  GET http://localhost:5001/getsearchlog/lucy  Username and jwt token do not match
GET /getsearchlog/lucy 403 9.855 ms - 35
[403 Forbidden, 279B, 15ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getaudituseraccesslog/Bert
  GET http://localhost:5001/getaudituseraccesslog/Bert  GET /getaudituseraccesslog/Bert 401 0.338 ms - 13
[401 Unauthorized, 259B, 11ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getaudituseraccesslog/Bert - with token
  GET http://localhost:5001/getaudituseraccesslog/Bert \GET /getaudituseraccesslog/Bert 501 1006.197 ms - 39
[501 Not Implemented, 289B, 1014ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ getaudituseraccesslog/lucy - with berts token
  GET http://localhost:5001/getaudituseraccesslog/lucy  Username and jwt token do not match
GET /getaudituseraccesslog/lucy 403 9.654 ms - 35
[403 Forbidden, 279B, 16ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ search/Bert/name/lucy
  GET http://localhost:5001/search/Bert/name/lucy  GET /search/Bert/name/lucy 401 0.345 ms - 13
[401 Unauthorized, 259B, 3ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ search/Bert/name/lucy - with token
  GET http://localhost:5001/search/Bert/name/lucy \GET /search/Bert/name/lucy 501 1055.809 ms - 40
[501 Not Implemented, 290B, 1072ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ search/lucy/name/lucy - with bert token
  GET http://localhost:5001/search/lucy/name/lucy  Username and jwt token do not match
GET /search/lucy/name/lucy 403 2.954 ms - 35
[403 Forbidden, 279B, 18ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ findUser/Bert
  GET http://localhost:5001/findUser/Bert  GET /findUser/Bert 200 4.197 ms - 128
[200 OK, 373B, 12ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ findUser/lucy - doesnt exist
  GET http://localhost:5001/findUser/lucy  GET /findUser/lucy 401 0.184 ms - 13
[401 Unauthorized, 259B, 13ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body

→ findUser/lucy - with bert token
  GET http://localhost:5001/findUser/lucy  Username and jwt token do not match
GET /findUser/lucy 403 4.494 ms - 35
[403 Forbidden, 279B, 20ms]
  √  response is ok
  √  response should be okay to process
  √  response must be valid and have a body
All tests passed
------------------------|----------|----------|----------|----------|-------------------|
File                    |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
------------------------|----------|----------|----------|----------|-------------------|
All files               |    85.17 |       78 |    84.62 |    85.51 |                   |
 BEHOLDER-User          |    73.08 |     62.5 |    66.67 |       74 |                   |
  postmanTest.js        |     38.1 |       50 |    66.67 |       40 |... 20,21,22,24,25 |
  server.js             |    96.77 |      100 |    66.67 |    96.67 |                32 |
 BEHOLDER-User/config   |    83.33 |     62.5 |       90 |    83.33 |                   |
  jwtConfig.js          |      100 |      100 |      100 |      100 |                   |
  keys.js               |      100 |      100 |      100 |      100 |                   |
  passport.js           |     82.5 |     62.5 |       90 |     82.5 |... 67,68,75,95,97 |
 BEHOLDER-User/models   |      100 |      100 |      100 |      100 |                   |
  user.js               |      100 |      100 |      100 |      100 |                   |
 BEHOLDER-User/routes   |    90.91 |    85.29 |    86.11 |    90.91 |                   |
  auditRequestlog.js    |    92.86 |      100 |       80 |    92.86 |                14 |
  auditSearchLog.js     |    92.86 |      100 |       80 |    92.86 |                13 |
  auditUserAccessLog.js |    92.86 |      100 |       80 |    92.86 |                13 |
  findUsers.js          |    86.67 |    83.33 |      100 |    86.67 |             20,21 |
  loginUser.js          |    90.48 |    66.67 |    85.71 |    90.48 |             17,22 |
  registerUser.js       |    93.75 |       75 |      100 |    93.75 |                 8 |
  search.js             |     87.5 |    83.33 |       80 |     87.5 |              9,16 |
------------------------|----------|----------|----------|----------|-------------------|